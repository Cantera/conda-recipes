name: CI

on:
  workflow_dispatch:
    inputs:
      incoming_ref:
        description: >
          The ref from Cantera/cantera to be built. Can be a tag, commit hash,
          or branch name.
        required: true
        default: "main"
      upload:
        description: Attempt to upload to Anaconda
        required: true
        default: "false"

env:
  MW_HEADERS_DIR: ${{ github.workspace }}/../mw_headers
  MACOSX_DEPLOYMENT_TARGET: "10.9"

jobs:
  dump:
    name: Dump the input parameters for the workflow
    runs-on: ubuntu-20.04
    steps:
      - name: Dump Event Payload
        run: jq . "$GITHUB_EVENT_PATH"
      - name: Echo the incoming_ref
        run: |
          echo "${{ github.event.inputs.incoming_ref }}"
          echo "${{ github.event.inputs.upload }}"

  build-libcantera-and-python:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
    - name: Set the INCOMING_REF needed for recipe/meta.yaml
      run: echo "INCOMING_REF=${{ github.event.inputs.incoming_ref }}" >> $GITHUB_ENV
      shell: bash
    - name: Check out this repository
      uses: actions/checkout@v2
    - name: Set up macOS SDK
      id: setup-macos-sdk
      uses: ./.github/actions/setup_macos
      if: runner.os == 'macOS'
    - name: Append to conda build config
      if: runner.os == 'macOS'
      run: |
        echo "" >> ./.ci_support/conda_build_config.yaml
        echo "CONDA_BUILD_SYSROOT:" >> ./.ci_support/conda_build_config.yaml
        echo "- ${CONDA_BUILD_SYSROOT}" >> ./.ci_support/conda_build_config.yaml
        echo "" >> ./.ci_support/conda_build_config.yaml
      env:
        CONDA_BUILD_SYSROOT: ${{ steps.setup-macos-sdk.outputs.conda_build_sysroot }}
    - name: Set Up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        conda-build-version: '3.21'
        activate-environment: ''
        auto-activate-base: true
    - name: Install Conda dependencies
      shell: bash -l {0}
      run: conda install -q anaconda-client conda-verify\<4.0 ripgrep
    - name: Build the Python and libcantera recipe
      shell: bash -l {0}
      run: conda build ./cantera -m ./.ci_support/conda_build_config.yaml
    - name: Upload package to anaconda.org
      run: |
        anaconda --token ${{ secrets.ANACONDA_TOKEN }} upload --force --label dev $CONDA/conda-bld/*/*cantera*.tar.bz2
      shell: bash -l {0}
      if: github.event.inputs.upload == 'true'

  build-matlab:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
    - name: Set the INCOMING_REF needed for recipe/meta.yaml
      run: echo "INCOMING_REF=${{ github.event.inputs.incoming_ref }}" >> $GITHUB_ENV
      shell: bash
    - name: Check out this repository
      uses: actions/checkout@v2
    - name: Set up macOS SDK
      id: setup-macos-sdk
      uses: ./.github/actions/setup_macos
      if: runner.os == 'macOS'
    - name: Append to conda build config
      if: runner.os == 'macOS'
      run: |
        echo "" >> ./.ci_support/conda_build_config.yaml
        echo "CONDA_BUILD_SYSROOT:" >> ./.ci_support/conda_build_config.yaml
        echo "- ${CONDA_BUILD_SYSROOT}" >> ./.ci_support/conda_build_config.yaml
        echo "" >> ./.ci_support/conda_build_config.yaml
      env:
        CONDA_BUILD_SYSROOT: ${{ steps.setup-macos-sdk.outputs.conda_build_sysroot }}
    - name: Set Up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        conda-build-version: '3.21'
        activate-environment: ''
        auto-activate-base: true
    - name: Install Conda dependencies
      shell: bash -l {0}
      run: conda install -q anaconda-client conda-verify\<4.0 ripgrep

    # The known_hosts key is generated with `ssh-keygen -F cantera.org` from a
    # machine that has previously logged in to cantera.org and trusts
    # that it logged in to the right machine
    - name: Set up SSH key and host for cloning MATLAB
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.CTDEPLOY_SSH_KEY }}
        known_hosts: ${{ secrets.CTDEPLOY_KNOWN_HOSTS }}
    # If the version of rsync is changed, the directories below have to be updated
    - name: Install rsync on Windows
      if: runner.os == 'Windows'
      run: choco install rsync --version 6.2.4
    # This seems like overkill, but rsync on Windows requires a POSIX-style path
    - name: Munge the MW_HEADERS_DIR for Windows rsync
      run: |
        import os
        from pathlib import Path, PurePosixPath
        mw_headers_dir = Path(os.environ["MW_HEADERS_DIR"]).resolve()
        mw_headers_dir = PurePosixPath(
            "/cygdrive",
            mw_headers_dir.drive[0],
            PurePosixPath(*mw_headers_dir.parts[1:])
        )
        with Path(os.environ["GITHUB_ENV"]).open(mode="a") as gh_env:
            gh_env.write(f"CYG_MW_HEADERS_DIR={mw_headers_dir}")
      shell: python
      if: runner.os == 'Windows'
    # When I tried this a few times, it only worked when I used powershell and had the
    # SSH options all in the single line with single quotes. Note that there is a
    # separate SSH binary pre-installed on the Windows runners that comes before this
    # one on the PATH, but it is linked with the wrong Cygwin DLL, so it will not work.
    - name: Get the MATLAB headers
      if: runner.os == 'Windows'
      run: |
        rsync -azvP -e `
        'C:\ProgramData\chocolatey\lib\rsync\tools\cwrsync_6.2.4_x64_free\bin\ssh.exe -i C:\Users\runneradmin\.ssh\id_rsa -o UserKnownHostsFile=C:\Users\runneradmin\.ssh\known_hosts' `
        ctdeploy@cantera.org:. $Env:CYG_MW_HEADERS_DIR
      shell: powershell
    - name: Get the MATLAB headers
      if: runner.os != 'Windows'
      run: "rsync -azvP ctdeploy@cantera.org:. ${MW_HEADERS_DIR}"
    - name: Build the MATLAB recipe
      shell: bash -l {0}
      run: conda build ./cantera-matlab -m ./.ci_support/conda_build_config.yaml
    - name: Upload package to anaconda.org
      run: |
        anaconda --token ${{ secrets.ANACONDA_TOKEN }} upload --force --label dev $CONDA/conda-bld/*/*cantera*.tar.bz2
      shell: bash -l {0}
      if: github.event.inputs.upload == 'true'
